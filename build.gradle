import jp.classmethod.aws.gradle.ec2.AmazonEC2RunInstanceTask;
import jp.classmethod.aws.gradle.ec2.AmazonEC2TerminateInstanceTask;
import jp.classmethod.aws.gradle.ec2.AmazonEC2WaitInstanceStatusTask;

plugins {
    id 'scala'
    id 'application'
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "jp.classmethod.aws.ec2" version "0.41"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.scala-lang:scala-library:2.13.1'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.scalatest:scalatest_2.13:3.1.0'
    testImplementation 'org.scalatestplus:junit-4-12_2.13:3.1.0.0'
}

application {
    mainClassName = 'com.github.arucard21.globe.replicator.HelloWorld'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.github.arucard21.globe.replicator.HelloWorld'
        )
    }
}

aws {
    profileName = 'default'
    region = 'us-east-1'
}

ext.awsInstanceURL = "";

task deployEC2Instance(type: AmazonEC2RunInstanceTask) {
    ami "ami-017a55663bff3fb20" //Ubuntu Server 19.10 on us-east-1 (N. Virginia)
    keyName "globeReplicator"
    instanceType "t2.micro"
    userData "#!/bin/bash\n" + "apt update\n" + "apt install -y openjdk-11-jre\n"
}

task terminateEC2Instance(type: AmazonEC2TerminateInstanceTask) {
    if(project.hasProperty("instanceID")){
        instanceIds += project.property("instanceID")
    }
}

task waitInstanceStatusStable(type: AmazonEC2WaitInstanceStatusTask) {
    if(project.hasProperty("instanceID")){
        instanceId = project.property("instanceID")
        doLast {
            println "Access instance with: ssh ubuntu@" + awsInstance.getPublicDnsName()
            awsInstanceURL = awsInstance.getPublicDnsName()
        }
    }
}

task(uploadBootJarFiles){
    dependsOn waitInstanceStatusStable
    doLast{
        exec {
            println "Copying GlobeReplicator to the EC2 instance"
            commandLine "scp",
                    "-o", "stricthostkeychecking=no",
                    "build/libs/GlobeReplicator-all.jar",
                    "ubuntu@${awsInstanceURL}:~"
        }
    }
}

task deployApplication(){
    dependsOn uploadBootJarFiles
    doLast{
        // wait for java to be installed
        sleep(60 * 1000)
        exec {
            println "Starting Globe Replicator on the EC2 instance"
            commandLine "ssh",
                    "-o", "stricthostkeychecking=no",
                    "ubuntu@${awsInstanceURL}",
                    "nohup java -jar ~/GlobeReplicator-all.jar > ~/GlobeReplicator.log 2>&1 &"
        }
    }
}
